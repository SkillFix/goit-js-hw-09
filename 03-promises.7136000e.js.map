{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAQC,SAASC,cAAc,uBAC/BC,EAAOF,SAASC,cAAc,sBAC9BE,EAASH,SAASC,cAAc,wBAChCG,EAAmBJ,SAASC,cAAc,yBAEhD,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,EAAUQ,MAAAP,IAEpBG,EAAO,C,SAAEJ,EAAUQ,MAAAP,MAEpBA,MAIPH,EAAiBW,iBAAiB,SAASC,IACzCZ,EAAiBa,UAAW,EAE5B,IAAIC,EAAaC,OAAOpB,EAAMqB,OAC1BC,EAAYF,OAAOjB,EAAKkB,OACxBE,EAAgBJ,EAEpB,IAAK,IAAIK,EAAI,EAAGA,EAAIpB,EAAOiB,MAAOG,GAAK,EACrClB,EAAckB,EAAI,EAAGD,GAClBE,MAAK,EAAClB,SAAEA,EAAUQ,MAAAW,MACjBC,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqBtB,QAAiBmB,UAGzCI,OAAM,EAACvB,SAAEA,EAAUQ,MAAAgB,MAClBJ,EAAA7B,GAAS8B,OAAOI,QACd,sBAAoBzB,QAAewB,UAGtCE,SAAQ,KACP,MAAMC,EAAcf,GAAcI,EAClCX,YAAW,KACTP,EAAiBa,UAAW,IAC3BgB,MAEPX,GAAiBD","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst btnCreatePromise = document.querySelector('button[type=\"submit\"]');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nbtnCreatePromise.addEventListener('click', e => {\n  btnCreatePromise.disabled = true;\n\n  let firstDelay = Number(delay.value);\n  let delayStep = Number(step.value);\n  let sumDelaysStep = firstDelay;\n\n  for (let i = 0; i < amount.value; i += 1) {\n    createPromise(i + 1, sumDelaysStep)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      })\n      .finally(() => {\n        const totalDelay = (firstDelay += sumDelaysStep);\n        setTimeout(() => {\n          btnCreatePromise.disabled = false;\n        }, totalDelay);\n      });\n    sumDelaysStep += delayStep;\n  }\n});\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$delay","document","querySelector","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$btnCreatePromise","$47d4ff9957288465$var$createPromise","position","delay1","Promise","resolve","reject","setTimeout","Math","random","delay","addEventListener","e","disabled","firstDelay","Number","value","delayStep","sumDelaysStep","i","then","delay2","$parcel$interopDefault","Notify","success","catch","delay3","failure","finally","totalDelay"],"version":3,"file":"03-promises.7136000e.js.map"}